// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Board can be serialized 1`] = `
Object {
  "grid": Object {
    "0,0": StartPathCard {
      "connectors": Array [
        1,
        2,
        3,
        4,
      ],
      "id": "test-id-6",
      "isUpsideDown": false,
      "status": "played",
    },
    "8,-2": RockFinishPathCard {
      "connectors": Array [
        1,
        4,
      ],
      "id": "test-id-9",
      "isFaceDown": true,
      "isUpsideDown": false,
      "status": "played",
    },
    "8,0": RockFinishPathCard {
      "connectors": Array [
        1,
        2,
      ],
      "id": "test-id-8",
      "isFaceDown": true,
      "isUpsideDown": false,
      "status": "played",
    },
    "8,2": GoldFinishPathCard {
      "connectors": Array [
        1,
        2,
        3,
        4,
      ],
      "id": "test-id-7",
      "isFaceDown": true,
      "isUpsideDown": false,
      "status": "played",
    },
  },
  "id": "test-id-5",
}
`;

exports[`Board get adjacent cards from the board when the position is beside a finish card returns surrounding cards including finish card 1`] = `
Array [
  undefined,
  undefined,
  undefined,
  PassageCard {
    "connectors": Array [
      2,
      4,
    ],
    "id": "test-id-62",
    "isUpsideDown": false,
    "status": "played",
  },
]
`;

exports[`Board get adjacent cards from the board when the position is beside nothing returns all empty spaces 1`] = `
Array [
  undefined,
  undefined,
  undefined,
  undefined,
]
`;

exports[`Board get adjacent cards from the board when the position is beside the start card returns the start card and other surrounding cards 1`] = `
Array [
  undefined,
  PassageCard {
    "connectors": Array [
      2,
      4,
    ],
    "id": "test-id-20",
    "isUpsideDown": false,
    "status": "played",
  },
  undefined,
  StartPathCard {
    "connectors": Array [
      1,
      2,
      3,
      4,
    ],
    "id": "test-id-6",
    "isUpsideDown": false,
    "status": "played",
  },
]
`;

exports[`Board get adjacent cards from the board when the position is surrounded returns surrounding cards 1`] = `
Array [
  PassageCard {
    "connectors": Array [
      1,
      2,
      3,
      4,
    ],
    "id": "test-id-40",
    "isUpsideDown": false,
    "status": "played",
  },
  PassageCard {
    "connectors": Array [
      1,
      2,
      3,
      4,
    ],
    "id": "test-id-72",
    "isUpsideDown": false,
    "status": "played",
  },
  PassageCard {
    "connectors": Array [
      1,
      2,
      3,
      4,
    ],
    "id": "test-id-54",
    "isUpsideDown": false,
    "status": "played",
  },
  StartPathCard {
    "connectors": Array [
      1,
      2,
      3,
      4,
    ],
    "id": "test-id-6",
    "isUpsideDown": false,
    "status": "played",
  },
]
`;

exports[`Board get available positions from the board initial board setup returns the four surrounding positions of the start position 1`] = `
Array [
  Position {
    "id": "test-id-10",
    "x": 0,
    "y": 1,
  },
  Position {
    "id": "test-id-11",
    "x": 1,
    "y": 0,
  },
  Position {
    "id": "test-id-12",
    "x": 0,
    "y": -1,
  },
  Position {
    "id": "test-id-13",
    "x": -1,
    "y": 0,
  },
]
`;

exports[`Board get available positions from the board when there is a circular passage returns correct positions 1`] = `
Array [
  Position {
    "id": "test-id-135",
    "x": 0,
    "y": 1,
  },
  Position {
    "id": "test-id-150",
    "x": 0,
    "y": -2,
  },
  Position {
    "id": "test-id-155",
    "x": -2,
    "y": 0,
  },
]
`;

exports[`Board get available positions from the board when there is a passage formed returns correct positions for continuing the passage  1`] = `
Array [
  Position {
    "id": "test-id-69",
    "x": 0,
    "y": 1,
  },
  Position {
    "id": "test-id-73",
    "x": 2,
    "y": 2,
  },
  Position {
    "id": "test-id-74",
    "x": 3,
    "y": 1,
  },
  Position {
    "id": "test-id-77",
    "x": 2,
    "y": 0,
  },
  Position {
    "id": "test-id-78",
    "x": 1,
    "y": -1,
  },
  Position {
    "id": "test-id-83",
    "x": 0,
    "y": -2,
  },
  Position {
    "id": "test-id-84",
    "x": -1,
    "y": 0,
  },
]
`;

exports[`Board get available positions from the board when there is a passage formed to a finish path card returns correct positions for continuing the passage  1`] = `
Array [
  Position {
    "id": "test-id-202",
    "x": 0,
    "y": 1,
  },
  Position {
    "id": "test-id-203",
    "x": 1,
    "y": 0,
  },
  Position {
    "id": "test-id-213",
    "x": 4,
    "y": -1,
  },
  Position {
    "id": "test-id-215",
    "x": 5,
    "y": -1,
  },
  Position {
    "id": "test-id-219",
    "x": 8,
    "y": -1,
  },
  Position {
    "id": "test-id-224",
    "x": 4,
    "y": -3,
  },
  Position {
    "id": "test-id-228",
    "x": 1,
    "y": -2,
  },
  Position {
    "id": "test-id-230",
    "x": 0,
    "y": -2,
  },
  Position {
    "id": "test-id-231",
    "x": -1,
    "y": 0,
  },
]
`;

exports[`Board get available positions from the board when there is a passage formed with upside down cards returns correct positions for continuing the passage  1`] = `
Array [
  Position {
    "id": "test-id-69",
    "x": 0,
    "y": 1,
  },
  Position {
    "id": "test-id-71",
    "x": 1,
    "y": 1,
  },
  Position {
    "id": "test-id-74",
    "x": 3,
    "y": 1,
  },
  Position {
    "id": "test-id-78",
    "x": 1,
    "y": -1,
  },
  Position {
    "id": "test-id-82",
    "x": 0,
    "y": -2,
  },
  Position {
    "id": "test-id-83",
    "x": -1,
    "y": -1,
  },
  Position {
    "id": "test-id-84",
    "x": -1,
    "y": 0,
  },
]
`;

exports[`Board get available positions from the board when there is a passage with dead-ends returns correct positions and does not put positions around dead ends 1`] = `
Array [
  Position {
    "id": "test-id-120",
    "x": 0,
    "y": 1,
  },
  Position {
    "id": "test-id-123",
    "x": 2,
    "y": 1,
  },
  Position {
    "id": "test-id-131",
    "x": 0,
    "y": -2,
  },
]
`;

exports[`Board visualize returns displayable version of the board 1`] = `
"                              ██████                                                      
                              ██████                                                      
                              ██  ██                                                      
                              ██  ██                                                      
                              ██  ██                                                      
                              ██  ██                                                      
                              ██  ██                                          ╭┄┄┄┄╮      
                              ██  ██                                          │    │      
                              ██  ██                                          ╰┄┄┄┄╯      
                              ██  ██                              ██████████████  ██╭┄┄┄┄╮
                              ██  ██                              ██            !!  │    │
                              ██  ██                              ██  ██████████  ██╰┄┄┄┄╯
                              ██  ██                              ██  ██      ╭┄┄┄┄╮      
                              ██  ██                              ██  ██      │    │      
                              ██  ██                              ██  ██      ╰┄┄┄┄╯      
████████████████████████████████  ██████████████████████████████████  ██      ██████      
████                            []                                    ██        xx██      
████████████████████████████████  ██████████████████████████████████████      ██  ██      
                              ██  ██                                                      
                              ██  ██                                                      
                              ██  ██                                                      
                              ██  ██                                          ██  ██      
                              ██  ██                                            xx██      
                              ██  ██                                          ██████      
                              ██  ██                                                      
                              ██  ██                                                      
                              ██  ██                                                      
                              ██  ██                                                      
                              ██  ██                                                      
                              ██  ██                                                      
                              ██  ██                                                      
                              ██████                                                      
                              ██████                                                      "
`;
