// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Board can be serialized 1`] = `
Object {
  "grid": Object {
    "0,0": StartPathCard {
      "connectors": Array [
        1,
        2,
        3,
        4,
      ],
      "id": "test-id-6",
      "isUpsideDown": false,
      "status": "played",
    },
    "7,-2": RockFinishPathCard {
      "connectors": Array [
        1,
        4,
      ],
      "id": "test-id-9",
      "isUpsideDown": false,
      "status": "played",
    },
    "7,0": RockFinishPathCard {
      "connectors": Array [
        1,
        2,
      ],
      "id": "test-id-8",
      "isUpsideDown": false,
      "status": "played",
    },
    "7,2": GoldFinishPathCard {
      "connectors": Array [
        1,
        2,
        3,
        4,
      ],
      "id": "test-id-7",
      "isUpsideDown": false,
      "status": "played",
    },
  },
  "id": "test-id-5",
}
`;

exports[`Board get adjacent cards from the board when the position is beside a finish card returns surrounding cards but not the finish card 1`] = `
Array [
  undefined,
  undefined,
  undefined,
  PassageCard {
    "connectors": Array [
      2,
      4,
    ],
    "id": "test-id-284",
    "isUpsideDown": false,
    "status": "played",
  },
]
`;

exports[`Board get adjacent cards from the board when the position is beside nothing returns all empty spaces 1`] = `
Array [
  undefined,
  undefined,
  undefined,
  undefined,
]
`;

exports[`Board get adjacent cards from the board when the position is beside the start card returns the start card and other surrounding cards 1`] = `
Array [
  undefined,
  PassageCard {
    "connectors": Array [
      2,
      4,
    ],
    "id": "test-id-272",
    "isUpsideDown": false,
    "status": "played",
  },
  undefined,
  StartPathCard {
    "connectors": Array [
      1,
      2,
      3,
      4,
    ],
    "id": "test-id-268",
    "isUpsideDown": false,
    "status": "played",
  },
]
`;

exports[`Board get adjacent cards from the board when the position is surrounded returns surrounding cards 1`] = `
Array [
  PassageCard {
    "connectors": Array [
      1,
      2,
      3,
      4,
    ],
    "id": "test-id-310",
    "isUpsideDown": false,
    "status": "played",
  },
  PassageCard {
    "connectors": Array [
      1,
      2,
      3,
      4,
    ],
    "id": "test-id-314",
    "isUpsideDown": false,
    "status": "played",
  },
  PassageCard {
    "connectors": Array [
      1,
      2,
      3,
      4,
    ],
    "id": "test-id-318",
    "isUpsideDown": false,
    "status": "played",
  },
  StartPathCard {
    "connectors": Array [
      1,
      2,
      3,
      4,
    ],
    "id": "test-id-304",
    "isUpsideDown": false,
    "status": "played",
  },
]
`;

exports[`Board visualize returns displayable version of the board 1`] = `
"                              ██████                                          
                              ██████                                          
                              ██  ██                                          
                              ██  ██                                          
                              ██  ██                                          
                              ██  ██                                          
                              ██  ██                                          
                              ██  ██                                          
                              ██  ██                                          
                              ██  ██                        ██████████████  ██
                              ██  ██                        ██            !!  
                              ██  ██                        ██  ██████████  ██
                              ██  ██                        ██  ██            
                              ██  ██                        ██  ██            
                              ██  ██                        ██  ██            
████████████████████████████████  ████████████████████████████  ██      ██  ██
████                            []                              ██      ██xx  
████████████████████████████████  ████████████████████████████████      ██████
                              ██  ██                                          
                              ██  ██                                          
                              ██  ██                                          
                              ██  ██                                    ██  ██
                              ██  ██                                      xx██
                              ██  ██                                    ██████
                              ██  ██                                          
                              ██  ██                                          
                              ██  ██                                          
                              ██  ██                                          
                              ██  ██                                          
                              ██  ██                                          
                              ██  ██                                          
                              ██████                                          
                              ██████                                          "
`;
